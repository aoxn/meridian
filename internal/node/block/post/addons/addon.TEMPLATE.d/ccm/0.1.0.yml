{{ if eq .Action "Ensure" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-ccm
  namespace: kube-system
  labels:
    xdpin.cn/managed-by: xdpin
data:
  cloud-config.json: |
    {
      "Global": {
        "ClusterID": "",
        "Region": "{{ .Region }}",
        "RouteTableIDS": "",
        "ServiceBackendType": "eni",
        "VpcID": "",
        "VswitchID": "",
        "ZoneID": ""
      }
    }
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:cloud-controller-manager
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
      - delete
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - update
      - create
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - update
      - create
      - delete
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:cloud-controller-manager
subjects:
  - kind: User
    name: system:cloud-controller-manager
    namespace: kube-system
---
  {{ end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: ccm
    tier: ccm
  name: ccm
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      component: ccm
      tier: ccm
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        component: ccm
        tier: ccm
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: component
                    operator: In
                    values:
                      - ccm
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - command:
            - /cloud-controller-manager
            - --kubeconfig=/etc/kubernetes/config/kubeconfig
            - --cloud-config=/etc/kubernetes/config/cloud-config.json
            - --metrics-bind-addr=$(POD_IP):10258
            - --health-probe-bind-addr=127.0.0.1:10258
            - --configure-cloud-routes=false
            - --controllers=service
          env:
            - name: VPC_ENDPOINT
              value: vpc.{{.Region}}.aliyuncs.com
            - name: ECS_ENDPOINT
              value: ecs.{{.Region}}.aliyuncs.com
            - name: SLB_ENDPOINT
              value: slb.{{.Region}}.aliyuncs.com
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: account.infra
                  key: access_key_id
            - name: ACCESS_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  name: account.infra
                  key: access_key_secret
          image: registry-{{ .Region }}.ack.aliyuncs.com/acs/cloud-controller-manager-amd64:v2.8.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - wget
                - -O
                - '-'
                - http://127.0.0.1:10258/healthz
            failureThreshold: 8
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: cloud-controller-manager
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1200
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/kubernetes/config
              name: ccm-kubeconfig
              readOnly: true
            - mountPath: /etc/localtime
              name: localtime
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccount: default
      schedulerName: default-scheduler
      securityContext: {}
      hostNetwork: true
      terminationGracePeriodSeconds: 30
      tolerations:
        - operator: Exists
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      volumes:
        - hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
            type: ""
          name: localtime
        - name: ccm-kubeconfig
          projected:
            defaultMode: 420
            sources:
              - secret:
                  items:
                    - key: kubeconfig
                      path: kubeconfig
                  name: ccm-kubeconfig
              - configMap:
                  items:
                    - key: cloud-config.json
                      path: cloud-config.json
                  name: config-ccm